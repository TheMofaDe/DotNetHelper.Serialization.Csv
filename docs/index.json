{
  "tutorials/Attributes/attribute.html": {
    "href": "tutorials/Attributes/attribute.html",
    "title": "Custom Attributes | DotNetHelper.Serialization.Csv",
    "keywords": "Custom Attributes In the secnarios where you need to build Update,Delete, or Upsert Statements. Attributes are use to generate the where clause. This library has its own custom attributes and can also work with the common DataAnnotation attributes. With the support of DataAnnotation this means this library could be paired with your favorite orm like Dapper or Enitity Framework Mark a property as an identity fields. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] Mark a property as a key field. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] <!-- #### Storing Columns As CSV, XML, & JSON ```csharp [SqlColumn(SerializableType = SerializableType.Json)] or [SqlColumn(SerializableType = SerializableType.Xml)] or [SqlColumn(SerializableType = SerializableType.Csv)] ``` -->"
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "THIS IS THE HOME PAGE TO TUTORIALS | DotNetHelper.Serialization.Csv",
    "keywords": "THIS IS THE HOME PAGE TO TUTORIALS"
  },
  "api/DotNetHelper.Serialization.Csv.html": {
    "href": "api/DotNetHelper.Serialization.Csv.html",
    "title": "Namespace DotNetHelper.Serialization.Csv | DotNetHelper.Serialization.Csv",
    "keywords": "Namespace DotNetHelper.Serialization.Csv Classes DataSourceCsv"
  },
  "tutorials/GenerateSql/object2sql.html": {
    "href": "tutorials/GenerateSql/object2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper.Serialization.Csv",
    "keywords": "SAMPLE ARTICLE"
  },
  "tutorials/GenerateSql/datatable2sql.html": {
    "href": "tutorials/GenerateSql/datatable2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper.Serialization.Csv",
    "keywords": "SAMPLE ARTICLE"
  },
  "api/DotNetHelper.Serialization.Csv.DataSourceCsv.html": {
    "href": "api/DotNetHelper.Serialization.Csv.DataSourceCsv.html",
    "title": "Class DataSourceCsv | DotNetHelper.Serialization.Csv",
    "keywords": "Class DataSourceCsv Inheritance Object DataSourceCsv Implements DotNetHelper.Serialization.Abstractions.Interface.ISerializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Serialization.Csv Assembly : DotNetHelper.Serialization.Csv.dll Syntax public class DataSourceCsv : ISerializer Constructors | Improve this Doc View Source DataSourceCsv(Configuration) Initializes a new instance of the DataSourceCsv class. Declaration public DataSourceCsv(Configuration configuration = null) Parameters Type Name Description CsvHelper.Configuration.Configuration configuration The configuration. Properties | Improve this Doc View Source Configuration Gets the CSV configuration. Declaration public Configuration Configuration { get; } Property Value Type Description CsvHelper.Configuration.Configuration The CSV configuration. Methods | Improve this Doc View Source Deserialize(Stream, Int32, Boolean) Declaration public dynamic Deserialize(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object | Improve this Doc View Source Deserialize(Stream, Type, Int32, Boolean) Declaration public object Deserialize(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Type type Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object | Improve this Doc View Source Deserialize(String) Declaration public dynamic Deserialize(string csv) Parameters Type Name Description String csv Returns Type Description Object | Improve this Doc View Source Deserialize(String, Type) Declaration public object Deserialize(string csv, Type type) Parameters Type Name Description String csv Type type Returns Type Description Object | Improve this Doc View Source Deserialize<T>(Stream, Int32, Boolean) Declaration public T Deserialize<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(String) Declaration public T Deserialize<T>(string csv) where T : class Parameters Type Name Description String csv Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeToList(Stream, Int32, Boolean) Declaration public List<dynamic> DeserializeToList(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(Stream, Type, Int32, Boolean) Declaration public List<object> DeserializeToList(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Type type Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(String) Declaration public List<dynamic> DeserializeToList(string csv) Parameters Type Name Description String csv Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(String, Type) Declaration public List<object> DeserializeToList(string csv, Type type) Parameters Type Name Description String csv Type type Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList<T>(Stream, Int32, Boolean) Declaration public List<T> DeserializeToList<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToList<T>(String) Declaration public List<T> DeserializeToList<T>(string csv) where T : class Parameters Type Name Description String csv Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source SerializeListToStream<T>(IEnumerable<T>, Int32) Declaration public Stream SerializeListToStream<T>(IEnumerable<T> objs, int bufferSize = 1024) where T : class Parameters Type Name Description IEnumerable <T> objs Int32 bufferSize Returns Type Description Stream Type Parameters Name Description T | Improve this Doc View Source SerializeListToStream<T>(IEnumerable<T>, Stream, Int32, Boolean) Declaration public void SerializeListToStream<T>(IEnumerable<T> objs, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description IEnumerable <T> objs Stream stream Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeListToString<T>(IEnumerable<T>) Declaration public string SerializeListToString<T>(IEnumerable<T> obj) where T : class Parameters Type Name Description IEnumerable <T> obj Returns Type Description String Type Parameters Name Description T | Improve this Doc View Source SerializeToStream(Object, Type, Int32) Declaration public Stream SerializeToStream(object obj, Type type, int bufferSize = 1024) Parameters Type Name Description Object obj Type type Int32 bufferSize Returns Type Description Stream | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj Type type Stream stream Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Int32) Declaration public Stream SerializeToStream<T>(T obj, int bufferSize = 1024) where T : class Parameters Type Name Description T obj Int32 bufferSize Returns Type Description Stream Type Parameters Name Description T | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj Stream stream Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj Returns Type Description String | Improve this Doc View Source SerializeToString<T>(T) Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj Returns Type Description String Type Parameters Name Description T Implements DotNetHelper.Serialization.Abstractions.Interface.ISerializer"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper.Serialization.Csv | DotNetHelper.Serialization.Csv",
    "keywords": "DotNetHelper.Serialization.Csv DotNetHelper.Serialization.Csv is a lightweight serialization library for csv. Package Tests Code Coverage How to use var csvSerializer = new DataSourceCsv(); Now you have access to all the Apis you will ever need for a json serializer check them out //Serialize an object to the provided stream void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); //Serialize an object to a new instance of a stream and returns the stream Stream SerializeToStream<T>(T obj, int bufferSize = 1024) where T : class; Stream SerializeToStream(object obj, Type type, int bufferSize = 1024); //Serialize an object to a string string SerializeToString(object obj); string SerializeToString<T>(T obj) where T : class; //Retrieve a list of either generics,objects,or dynamics from either a stream or string List<dynamic> DeserializeToList(string content); List<dynamic> DeserializeToList(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); List<T> DeserializeToList<T>(string content) where T : class; List<T> DeserializeToList<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; List<object> DeserializeToList(string content, Type type); //Retrieve a dynamic object from String or stream dynamic Deserialize(string content); dynamic Deserialize(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); //Retrieve a strongly type from a string or stream T Deserialize<T>(string content) where T : class; T Deserialize<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; //Retrieve a object from a string or stream object Deserialize(string content, Type type); object Deserialize(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false); Serialization with JSON JSON LINK <!-- Links. -->"
  }
}